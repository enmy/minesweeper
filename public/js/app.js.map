{"version":3,"sources":["webpack:///./resources/js/app.js","webpack:///./resources/js/bootstrap.js","webpack:///./resources/js/core/isMine.js","webpack:///./resources/js/core/mineValue.js","webpack:///./resources/js/core/visitAdjacent.js","webpack:///./resources/js/core/createBoard.js","webpack:///./resources/js/core/initBoard.js","webpack:///./resources/js/components/Emoji.jsx","webpack:///./resources/js/components/CellEmoji.jsx","webpack:///./resources/js/components/GameStateEmoji.jsx","webpack:///./resources/js/components/Board.jsx","webpack:///./resources/js/hooks/useBoard.js","webpack:///./resources/js/components/CustomDimensionsForm.jsx","webpack:///./resources/js/App.jsx","webpack:///./resources/js/hooks/useBoardDimensions.js","webpack:///./resources/js/index.js"],"names":["require","window","_","axios","defaults","headers","common","isMine","value","visitAdjacent","x","y","width","height","fn","createBoard","mines","Error","validateBoard","tooManyTries","doCreateBoard","error","CellWithTooManyAdjacentException","placedMines","board","Array","createEmptyBoard","xTarget","Math","floor","random","yTarget","initBoard","boardValues","map","row","cell","state","Emoji","code","String","fromCodePoint","emojiFromCodePoint","CellEmoji","GameStateEmoji","gameState","Board","dimensions","defaultBoard","useState","setBoard","gameEnded","setGameEnded","seconds","setSeconds","runTimer","setRunTimer","minesCounter","setMinesCounter","useEffect","interval","setInterval","clearInterval","uncoverAllMines","i","length","j","restart","uncover","useCallback","uncoverRecursively","toogleFlag","uncoverCell","forEach","rowIndex","columnIndex","includes","useBoard","boardDimensions","handleToogleFlag","e","preventDefault","className","colSpan","style","float","onClick","onContextMenu","CustomDimensionsForm","showForm","setBoardDimensions","htmlFor","type","name","onChange","target","App","setShowForm","defaultWidth","defaultHeight","defaultMines","setWidth","setHeight","setMines","useBoardDimensions","ErrorBoundary","fallbackRender","resetErrorBoundary","marginTop","marginBottom","color","message","show","document","getElementById","ReactDOM"],"mappings":"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","file":"/js/app.js","sourcesContent":["require('./bootstrap')\nrequire('./index')\n","window._ = require('lodash');\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nwindow.axios = require('axios');\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo';\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY,\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     forceTLS: true\n// });\n","import mineValue from './mineValue'\n\nexport default function isMine (value) {\n  return value === mineValue()\n}\n","export default function mineValue () {\n  return -1\n}\n","export default function visitAdjacent (x, y, width, height, fn) {\n  if (x - 1 >= 0) {\n    fn(x - 1, y)\n  }\n  if (y - 1 >= 0) {\n    fn(x, y - 1)\n  }\n  if (x - 1 >= 0 && y - 1 >= 0) {\n    fn(x - 1, y - 1)\n  }\n  if (x + 1 < width) {\n    fn(x + 1, y)\n  }\n  if (y + 1 < height) {\n    fn(x, y + 1)\n  }\n  if (x + 1 < width && y + 1 < height) {\n    fn(x + 1, y + 1)\n  }\n  if (x - 1 >= 0 && y + 1 < height) {\n    fn(x - 1, y + 1)\n  }\n  if (x + 1 < width && y - 1 >= 0) {\n    fn(x + 1, y - 1)\n  }\n}\n","import isMine from './isMine'\nimport mineValue from './mineValue'\nimport visitAdjacent from './visitAdjacent'\n\nexport default function createBoard (width, height, mines) {\n  validateBoard(width, height, mines)\n\n  let tooManyTries = 0\n  while (tooManyTries++ < 1000) {\n    try {\n      return doCreateBoard(width, height, mines)\n    } catch (error) {\n      if (!(error instanceof CellWithTooManyAdjacentException)) {\n        throw error\n      }\n    }\n  }\n\n  throw new Error('Giving up trying to create the board, there are too many mines.')\n}\n\nfunction doCreateBoard (width, height, mines) {\n  let placedMines = 0\n  const board = createEmptyBoard(width, height)\n\n  while (placedMines < mines) {\n    const xTarget = Math.floor(Math.random() * width)\n    const yTarget = Math.floor(Math.random() * height)\n\n    if (!isMine(board[xTarget][yTarget])) {\n      board[xTarget][yTarget] = mineValue()\n      placedMines++\n\n      visitAdjacent(xTarget, yTarget, width, height, (x, y) => {\n        if (!isMine(board[x][y])) {\n          board[x][y]++\n          if (board[x][y] > 6) {\n            throw new CellWithTooManyAdjacentException()\n          }\n        }\n      })\n    }\n  }\n  return board\n}\n\nfunction validateBoard (width, height, mines) {\n  if (width < 6 || height < 6) {\n    throw new Error('The side should be bigger than 5')\n  }\n  if (width * height > 512) {\n    throw new Error('The board is too big. It should be less than 512 cells')\n  }\n  if (width * height * 0.25 < mines) {\n    throw new Error('There are too many mines for this board.')\n  }\n  if (width * 0.25 > height || height * 0.25 > width) {\n    throw new Error('One side is too small compared to the other.')\n  }\n}\n\nfunction createEmptyBoard (width, height) {\n  const board = new Array(width)\n  for (let x = 0; x < width; x++) {\n    board[x] = new Array(height)\n    for (let y = 0; y < height; y++) {\n      board[x][y] = 0\n    }\n  }\n  return board\n}\n\nfunction CellWithTooManyAdjacentException () {}\n","export default function initBoard (boardValues) {\n  return boardValues.map(row => (\n    row.map(cell => ({\n      value: cell,\n      state: 'covered'\n    }))\n  ))\n}\n","export default function Emoji ({ code }) {\n  return emojiFromCodePoint(code)\n}\n\nfunction emojiFromCodePoint (code) {\n  switch (code) {\n    case 'question':\n      return String.fromCodePoint(0x2753)\n\n    case 'bomb':\n      return String.fromCodePoint(0x1F4A3)\n\n    case 'boom':\n      return String.fromCodePoint(0x1F4A5)\n\n    case 'triangular_flag':\n      return String.fromCodePoint(0x1F6A9)\n\n    case 'smiling_face_with_sunglasses':\n      return String.fromCodePoint(0x1F60E)\n\n    case 'dizzy_face':\n      return String.fromCodePoint(0x1F635)\n\n    case 'neutral_face':\n      return String.fromCodePoint(0x1F610)\n\n    case 'cross_mark':\n      return String.fromCodePoint(0x274C)\n\n    default:\n      throw Error(`Emoji ${code} not implemented`)\n  }\n}\n","import React from 'react'\nimport isMine from '../core/isMine'\nimport Emoji from './Emoji'\n\nexport default function CellEmoji ({ cell }) {\n  switch (cell.state) {\n    case 'covered':\n      return ' '\n\n    case 'flagged':\n      return <Emoji code='triangular_flag' />\n\n    case 'question-mark':\n      return <Emoji code='question' />\n\n    case 'exploted':\n      return <Emoji code='boom' />\n\n    case 'uncovered':\n      return isMine(cell.value) ? <Emoji code='bomb' /> : (cell.value || ' ')\n\n    case 'wrong-flagged':\n      return <Emoji code='cross_mark' />\n\n    default:\n      throw Error(`Cell state '${cell.state}' not implemented`)\n  }\n}\n","import React from 'react'\nimport Emoji from './Emoji'\n\nexport default function GameStateEmoji ({ gameState }) {\n  switch (gameState) {\n    case 'won':\n      return <Emoji code='smiling_face_with_sunglasses' />\n\n    case false:\n      return <Emoji code='neutral_face' />\n\n    case 'lose':\n      return <Emoji code='dizzy_face' />\n\n    default:\n      throw Error(`Game state '${gameState}' not implemented`)\n  }\n}\n","import React, { useCallback } from 'react'\nimport useBoard from '../hooks/useBoard'\nimport CellEmoji from './CellEmoji'\nimport GameStateEmoji from './GameStateEmoji'\n\nexport default function Board ({ boardDimensions }) {\n  const { board, uncover, restart, toogleFlag, seconds, minesCounter, gameEnded } = useBoard(boardDimensions)\n\n  const handleToogleFlag = useCallback((e, rowIndex, columnIndex) => {\n    e.preventDefault()\n    toogleFlag(rowIndex, columnIndex)\n  }, [])\n\n  return (\n    <table className='board'>\n      <tbody>\n        <tr>\n          <td className='header' colSpan={board[0].length}>\n            <div className='counter' style={{ float: 'left' }}>{minesCounter}</div>\n            <div className='counter' style={{ float: 'right' }}>{seconds > 999 ? 999 : seconds}</div>\n            <div className='restarter' onClick={restart}>\n              <GameStateEmoji gameState={gameEnded} />\n            </div>\n          </td>\n        </tr>\n        {board.map((row, rowIndex) => (\n          <tr key={rowIndex}>\n            {row.map((cell, columnIndex) => (\n              <td\n                key={`${rowIndex},${columnIndex}`}\n                className={`cell ${cell.state}`}\n                onClick={() => uncover(rowIndex, columnIndex)}\n                onContextMenu={e => handleToogleFlag(e, rowIndex, columnIndex)}\n              >\n                <CellEmoji cell={cell} />\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport createBoard from '../core/createBoard'\nimport initBoard from '../core/initBoard'\nimport isMine from '../core/isMine'\nimport visitAdjacent from '../core/visitAdjacent'\n\nexport default function useBoard (dimensions, defaultBoard = null) {\n  const { width, height, mines } = dimensions\n  const [board, setBoard] = useState(() => defaultBoard || initBoard(createBoard(width, height, mines)))\n  const [gameEnded, setGameEnded] = useState(false)\n  const [seconds, setSeconds] = useState(0)\n  const [runTimer, setRunTimer] = useState(false)\n  const [minesCounter, setMinesCounter] = useState(mines)\n\n  useEffect(() => {\n    if (!runTimer) {\n      return\n    }\n\n    const interval = setInterval(() => {\n      setSeconds(seconds => seconds + 1)\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [runTimer])\n\n  useEffect(() => {\n    if (gameEnded) {\n      setRunTimer(false)\n      uncoverAllMines()\n    } else {\n      setSeconds(0)\n      setMinesCounter(mines)\n    }\n  }, [gameEnded])\n\n  useEffect(() => {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (!isMine(board[i][j].value) && board[i][j].state !== 'uncovered') {\n          return\n        }\n      }\n    }\n    setGameEnded('won')\n  }, [board])\n\n  useEffect(() => {\n    restart()\n  }, [width, height, mines])\n\n  useEffect(() => {\n    setMinesCounter(mines)\n  }, [mines])\n\n  const uncover = useCallback((x, y) => {\n    if (gameEnded) {\n      return\n    }\n\n    setRunTimer(true)\n\n    setBoard(board => {\n      uncoverRecursively(board, x, y)\n      return [...board]\n    })\n  }, [gameEnded])\n\n  const restart = useCallback(() => {\n    setBoard(initBoard(createBoard(width, height, mines)))\n    setGameEnded(false)\n  }, [width, height, mines])\n\n  const toogleFlag = useCallback((xTarget, yTarget) => {\n    if (gameEnded) {\n      return\n    }\n\n    setBoard(board => {\n      const cell = board[xTarget][yTarget]\n      if (cell.state === 'flagged') {\n        cell.state = 'question-mark'\n        setMinesCounter(mines => mines + 1)\n      } else if (cell.state === 'covered') {\n        cell.state = 'flagged'\n        setMinesCounter(mines => mines - 1)\n      } else if (cell.state === 'question-mark') {\n        cell.state = 'covered'\n      }\n      return [...board]\n    })\n  }, [])\n\n  function uncoverRecursively (board, xTarget, yTarget) {\n    uncoverCell(board, xTarget, yTarget)\n\n    const cell = board[xTarget][yTarget]\n    if (isMine(cell.value)) {\n      cell.state = 'exploted'\n      setGameEnded('lose')\n    }\n\n    if (cell.value === 0 && cell.state !== 'flagged') {\n      visitAdjacent(xTarget, yTarget, width, height, (x, y) => {\n        if (board[x][y].state !== 'uncovered') {\n          uncoverRecursively(board, x, y)\n        }\n      })\n    }\n  }\n\n  function uncoverAllMines () {\n    setBoard(board => {\n      board.forEach((row, rowIndex) => (\n        row.forEach((cell, columnIndex) => {\n          if (isMine(cell.value) || cell.state === 'flagged') {\n            uncoverCell(board, rowIndex, columnIndex)\n          }\n        })\n      ))\n      return [...board]\n    })\n  }\n\n  function uncoverCell (board, xTarget, yTarget) {\n    const cell = board[xTarget][yTarget]\n    if (['covered', 'question-mark'].includes(cell.state)) {\n      cell.state = 'uncovered'\n    } else if (cell.state === 'flagged' && !isMine(cell.value) && gameEnded) {\n      cell.state = 'wrong-flagged'\n    }\n  }\n\n  return {\n    board,\n    uncover,\n    restart,\n    toogleFlag,\n    seconds,\n    minesCounter,\n    gameEnded\n  }\n}\n","import React from 'react'\n\nexport default function CustomDimensionsForm ({ boardDimensions, showForm }) {\n  const { setBoardDimensions, ...dimensions } = boardDimensions\n\n  return (\n    <div className={showForm ? '' : 'invisible'}>\n      <label htmlFor='width'>\n        Width\n        <input\n          type='number'\n          className='dimension'\n          name='width'\n          value={dimensions.height}\n          onChange={e => setBoardDimensions(dimensions.width, e.target.value, dimensions.mines)}\n        />\n      </label>\n      <br />\n      <label htmlFor='height'>\n        Height\n        <input\n          type='number'\n          className='dimension'\n          name='height'\n          value={dimensions.width}\n          onChange={e => setBoardDimensions(e.target.value, dimensions.height, dimensions.mines)}\n        />\n      </label>\n      <br />\n      <label htmlFor='mines'>\n        Mines\n        <input\n          type='number'\n          className='dimension'\n          name='mines'\n          value={dimensions.mines}\n          onChange={e => setBoardDimensions(dimensions.width, dimensions.height, e.target.value)}\n        />\n      </label>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport Board from './components/Board'\nimport CustomDimensionsForm from './components/CustomDimensionsForm'\nimport useBoardDimensions from './hooks/useBoardDimensions'\n\nexport default function App () {\n  const [showForm, setShowForm] = useState(false)\n  const boardDimensions = useBoardDimensions()\n  const { setBoardDimensions } = boardDimensions\n\n  return (\n    <>\n      <h1>Minesweeper</h1>\n      <h3><i>by: Enmy Perez</i></h3>\n      <ErrorBoundary\n        fallbackRender={({ error, resetErrorBoundary }) => (\n          <div style={{ marginTop: '4em', marginBottom: '4em' }}>\n            <h3 style={{ color: 'red' }}>{error.message}</h3>\n            <button onClick={resetErrorBoundary} className='py-4'>Try again</button>\n          </div>\n        )}\n      >\n        <Board boardDimensions={boardDimensions} />\n      </ErrorBoundary>\n      <div>\n        <span className='level-selector' onClick={() => setBoardDimensions(8, 8, 10)}>Beginner</span>\n        <span className='level-selector' onClick={() => setBoardDimensions(16, 16, 40)}>Intermediate</span>\n        <span className='level-selector' onClick={() => setBoardDimensions(16, 30, 99)}>Expert</span>\n        <span className='level-selector' onClick={() => setShowForm(show => !show)}>Custom</span>\n      </div>\n      <CustomDimensionsForm\n        boardDimensions={boardDimensions}\n        showForm={showForm}\n      />\n    </>\n  )\n}\n","import { useCallback, useState } from 'react'\n\nexport default function useBoardDimensions ({ defaultWidth = 8, defaultHeight = 8, defaultMines = 10 } = {}) {\n  const [width, setWidth] = useState(defaultWidth)\n  const [height, setHeight] = useState(defaultHeight)\n  const [mines, setMines] = useState(defaultMines)\n\n  const setBoardDimensions = useCallback((width, height, mines) => {\n    setWidth(width)\n    setHeight(height)\n    setMines(mines)\n  }, [])\n\n  return {\n    width,\n    height,\n    mines,\n    setBoardDimensions\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nif (document.getElementById('root')) {\n  ReactDOM.render(<App />, document.getElementById('root'))\n}\n"],"sourceRoot":""}