{"version":3,"sources":["webpack:///./resources/js/app.js","webpack:///./resources/js/bootstrap.js","webpack:///./resources/js/core/isMine.js","webpack:///./resources/js/core/mineValue.js","webpack:///./resources/js/core/visitAdjacent.js","webpack:///./resources/js/core/createBoard.js","webpack:///./resources/js/core/initBoard.js","webpack:///./resources/js/hooks/useSecondsHand.js","webpack:///./resources/js/hooks/useBoard.js","webpack:///./resources/js/components/Emoji.jsx","webpack:///./resources/js/components/CellEmoji.jsx","webpack:///./resources/js/components/GameStateEmoji.jsx","webpack:///./resources/js/components/Board.jsx","webpack:///./resources/js/components/Main.jsx","webpack:///./resources/js/components/CustomDimensionsForm.jsx","webpack:///./resources/js/components/NewGame.jsx","webpack:///./resources/js/core/api/http.js","webpack:///./resources/js/core/api/api.js","webpack:///./resources/js/core/api/boards.js","webpack:///./resources/js/hooks/useStoredBoard.js","webpack:///./resources/js/hooks/useView.js","webpack:///./resources/js/App.jsx","webpack:///./resources/js/hooks/useBoardDimensions.js","webpack:///./resources/js/core/broserId.js","webpack:///./resources/js/index.js"],"names":["require","window","_","axios","defaults","headers","common","isMine","value","visitAdjacent","x","y","width","height","fn","createBoard","mines","maxAdjacentMines","validateBoard","tooManyTries","doCreateBoard","error","CellWithTooManyAdjacentException","Error","placedMines","board","Array","createEmptyBoard","xTarget","Math","floor","random","yTarget","initBoard","boardValues","map","row","cell","state","useSecondsHand","run","gameEnded","defaultSeconds","useState","seconds","setSeconds","useEffect","interval","setInterval","clearInterval","remainingMines","reduce","total","count","Emoji","code","String","fromCodePoint","emojiFromCodePoint","CellEmoji","GameStateEmoji","gameState","Board","boardDimensions","defaultBoard","saveBoard","deleteBoard","onGoBack","dimensions","setBoard","setGameEnded","runTimer","setRunTimer","minesCounter","setMinesCounter","uncoverAllMines","i","length","j","restart","uncover","useCallback","uncoverRecursively","toogleFlag","uncoverCell","forEach","rowIndex","columnIndex","includes","useBoard","handleToogleFlag","e","preventDefault","handleGoBack","className","onClick","colSpan","style","float","onContextMenu","Main","onContinue","onNewGame","canContinue","CustomDimensionsForm","showForm","submit","setBoardDimensions","htmlFor","type","name","onChange","target","display","NewGame","onBoardView","setShowForm","setDimensions","show","http","url","method","params","body","httpBase","data","baseURL","Accept","paramsSerializer","qs","arrayFormat","validateStatus","status","create","options","response","deserializeResponse","update","fetch","destroy","deserialize","opt","keyForAttribute","Deserializer","errors","browserId","JSON","stringify","serialize","browser_id","parseBoard","id","undefined","filter","Serializer","attributes","parse","useStoredBoard","stored","setStored","fetchBoardsBy","then","console","updateBoard","destroyBoard","mainView","continueView","newGameView","boardView","App","defaultWidth","defaultHeight","defaultMines","defaultMaxAdjacentMines","setWidth","setHeight","setMines","setMaxAdjacentMines","useBoardDimensions","view","setView","defaultDimensions","useMemo","setMainView","setContinueVew","setNewGameView","setBoardView","useView","ErrorBoundary","fallbackRender","resetErrorBoundary","marginTop","marginBottom","color","message","document","getElementById","ReactDOM"],"mappings":"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","file":"/js/app.js","sourcesContent":["require('./bootstrap')\nrequire('./index')\n","window._ = require('lodash');\n\n/**\n * We'll load the axios HTTP library which allows us to easily issue requests\n * to our Laravel back-end. This library automatically handles sending the\n * CSRF token as a header based on the value of the \"XSRF\" token cookie.\n */\n\nwindow.axios = require('axios');\n\nwindow.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';\n\n/**\n * Echo exposes an expressive API for subscribing to channels and listening\n * for events that are broadcast by Laravel. Echo and event broadcasting\n * allows your team to easily build robust real-time web applications.\n */\n\n// import Echo from 'laravel-echo';\n\n// window.Pusher = require('pusher-js');\n\n// window.Echo = new Echo({\n//     broadcaster: 'pusher',\n//     key: process.env.MIX_PUSHER_APP_KEY,\n//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,\n//     forceTLS: true\n// });\n","import mineValue from './mineValue'\n\nexport default function isMine (value) {\n  return value === mineValue()\n}\n","export default function mineValue () {\n  return -1\n}\n","export default function visitAdjacent (x, y, width, height, fn) {\n  if (x - 1 >= 0) {\n    fn(x - 1, y)\n  }\n  if (y - 1 >= 0) {\n    fn(x, y - 1)\n  }\n  if (x - 1 >= 0 && y - 1 >= 0) {\n    fn(x - 1, y - 1)\n  }\n  if (x + 1 < width) {\n    fn(x + 1, y)\n  }\n  if (y + 1 < height) {\n    fn(x, y + 1)\n  }\n  if (x + 1 < width && y + 1 < height) {\n    fn(x + 1, y + 1)\n  }\n  if (x - 1 >= 0 && y + 1 < height) {\n    fn(x - 1, y + 1)\n  }\n  if (x + 1 < width && y - 1 >= 0) {\n    fn(x + 1, y - 1)\n  }\n}\n","import isMine from './isMine'\nimport mineValue from './mineValue'\nimport visitAdjacent from './visitAdjacent'\n\nexport default function createBoard (width, height, mines, maxAdjacentMines = 6) {\n  validateBoard(width, height, mines)\n\n  let tooManyTries = 0\n  while (tooManyTries++ < 1000) {\n    try {\n      return doCreateBoard(width, height, mines, maxAdjacentMines)\n    } catch (error) {\n      if (!(error instanceof CellWithTooManyAdjacentException)) {\n        throw error\n      }\n    }\n  }\n\n  throw new Error('Giving up trying to create the board, there are too many mines.')\n}\n\nfunction doCreateBoard (width, height, mines, maxAdjacentMines) {\n  let placedMines = 0\n  const board = createEmptyBoard(width, height)\n\n  while (placedMines < mines) {\n    const xTarget = Math.floor(Math.random() * width)\n    const yTarget = Math.floor(Math.random() * height)\n\n    if (!isMine(board[xTarget][yTarget])) {\n      board[xTarget][yTarget] = mineValue()\n      placedMines++\n\n      visitAdjacent(xTarget, yTarget, width, height, (x, y) => {\n        if (!isMine(board[x][y])) {\n          board[x][y]++\n          if (board[x][y] > maxAdjacentMines) {\n            throw new CellWithTooManyAdjacentException()\n          }\n        }\n      })\n    }\n  }\n  return board\n}\n\nfunction validateBoard (width, height, mines) {\n  if (width < 6 || height < 6) {\n    throw new Error('The side should be bigger than 5')\n  }\n  if (width * height > 512) {\n    throw new Error('The board is too big. It should be less than 512 cells')\n  }\n  if (width * height * 0.25 < mines) {\n    throw new Error('There are too many mines for this board.')\n  }\n  if (width * 0.25 > height || height * 0.25 > width) {\n    throw new Error('One side is too small compared to the other.')\n  }\n}\n\nfunction createEmptyBoard (width, height) {\n  const board = new Array(width)\n  for (let x = 0; x < width; x++) {\n    board[x] = new Array(height)\n    for (let y = 0; y < height; y++) {\n      board[x][y] = 0\n    }\n  }\n  return board\n}\n\nfunction CellWithTooManyAdjacentException () {}\n","export default function initBoard (boardValues) {\n  return boardValues.map(row => (\n    row.map(cell => ({\n      value: cell,\n      state: 'covered'\n    }))\n  ))\n}\n","import { useEffect, useState } from 'react'\n\nexport default function useSecondsHand (run, gameEnded, { defaultSeconds = 0 } = {}) {\n  const [seconds, setSeconds] = useState(defaultSeconds)\n\n  useEffect(() => {\n    if (!run && !defaultSeconds) {\n      return\n    }\n\n    const interval = setInterval(() => {\n      setSeconds(seconds => seconds + 1)\n    }, 1000)\n\n    return () => clearInterval(interval)\n  }, [run])\n\n  useEffect(() => {\n    if (!gameEnded && !defaultSeconds) {\n      setSeconds(0)\n    }\n  }, [gameEnded])\n\n  return [seconds, setSeconds]\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport createBoard from '../core/createBoard'\nimport initBoard from '../core/initBoard'\nimport isMine from '../core/isMine'\nimport visitAdjacent from '../core/visitAdjacent'\nimport useSecondsHand from './useSecondsHand'\n\nexport default function useBoard (dimensions, { defaultBoard = null, defaultSeconds = 0 } = {}) {\n  const { width, height, mines, maxAdjacentMines } = dimensions\n  const [board, setBoard] = useState(() => defaultBoard || initBoard(createBoard(width, height, mines)))\n  const [gameEnded, setGameEnded] = useState(false)\n  const [runTimer, setRunTimer] = useState(false)\n  const [minesCounter, setMinesCounter] = useState(mines)\n  const [seconds, setSeconds] = useSecondsHand(runTimer, gameEnded, { defaultSeconds })\n\n  useEffect(() => {\n    if (gameEnded) {\n      setRunTimer(false)\n      uncoverAllMines()\n    } else {\n      setMinesCounter(mines)\n    }\n  }, [gameEnded])\n\n  useEffect(() => {\n    for (let i = 0; i < board.length; i++) {\n      for (let j = 0; j < board[i].length; j++) {\n        if (!isMine(board[i][j].value) && board[i][j].state !== 'uncovered') {\n          return\n        }\n      }\n    }\n    setGameEnded('won')\n  }, [board])\n\n  useEffect(() => {\n    if (!defaultBoard) {\n      restart()\n    }\n  }, [width, height, mines])\n\n  useEffect(() => {\n    if (defaultBoard) {\n      setMinesCounter(remainingMines(defaultBoard))\n    } else {\n      setMinesCounter(mines)\n    }\n  }, [mines])\n\n  const uncover = useCallback((x, y) => {\n    if (gameEnded) {\n      return\n    }\n\n    setRunTimer(true)\n\n    setBoard(board => {\n      uncoverRecursively(board, x, y)\n      return [...board]\n    })\n  }, [gameEnded, width, height])\n\n  const restart = useCallback(() => {\n    setBoard(initBoard(createBoard(width, height, mines, maxAdjacentMines)))\n    setGameEnded(false)\n    setRunTimer(false)\n    setSeconds(0)\n  }, [width, height, mines, maxAdjacentMines])\n\n  const toogleFlag = useCallback((xTarget, yTarget) => {\n    if (gameEnded) {\n      return\n    }\n\n    setBoard(board => {\n      const cell = board[xTarget][yTarget]\n      if (cell.state === 'flagged') {\n        cell.state = 'question-mark'\n        setMinesCounter(mines => mines + 1)\n      } else if (cell.state === 'covered') {\n        cell.state = 'flagged'\n        setMinesCounter(mines => mines - 1)\n      } else if (cell.state === 'question-mark') {\n        cell.state = 'covered'\n      }\n      return [...board]\n    })\n  }, [gameEnded])\n\n  function uncoverRecursively (board, xTarget, yTarget) {\n    uncoverCell(board, xTarget, yTarget)\n\n    const cell = board[xTarget][yTarget]\n    if (cell.value === 0 && cell.state !== 'flagged') {\n      visitAdjacent(xTarget, yTarget, width, height, (x, y) => {\n        if (board[x][y].state !== 'uncovered') {\n          uncoverRecursively(board, x, y)\n        }\n      })\n    }\n  }\n\n  function uncoverAllMines () {\n    setBoard(board => {\n      board.forEach((row, rowIndex) => (\n        row.forEach((cell, columnIndex) => {\n          if (isMine(cell.value) || cell.state === 'flagged') {\n            uncoverCell(board, rowIndex, columnIndex)\n          }\n        })\n      ))\n      return [...board]\n    })\n  }\n\n  function uncoverCell (board, xTarget, yTarget) {\n    const cell = board[xTarget][yTarget]\n    if (isMine(cell.value) && cell.state !== 'flagged' && !gameEnded) {\n      cell.state = 'exploted'\n      setGameEnded('lose')\n    } else if (['covered', 'question-mark'].includes(cell.state)) {\n      cell.state = 'uncovered'\n    } else if (cell.state === 'flagged' && !isMine(cell.value) && gameEnded) {\n      cell.state = 'wrong-flagged'\n    }\n  }\n\n  return {\n    board,\n    uncover,\n    restart,\n    toogleFlag,\n    seconds,\n    minesCounter,\n    gameEnded\n  }\n}\n\nfunction remainingMines (board) {\n  return board.reduce((total, row) => (\n    total + row.reduce((count, cell) => (\n      isMine(cell.value) && cell.state !== 'flagged'\n        ? count + 1\n        : count\n    ), 0)\n  ), 0)\n}\n","export default function Emoji ({ code }) {\n  return emojiFromCodePoint(code)\n}\n\nfunction emojiFromCodePoint (code) {\n  switch (code) {\n    case 'question':\n      return String.fromCodePoint(0x2753)\n\n    case 'bomb':\n      return String.fromCodePoint(0x1F4A3)\n\n    case 'boom':\n      return String.fromCodePoint(0x1F4A5)\n\n    case 'triangular_flag':\n      return String.fromCodePoint(0x1F6A9)\n\n    case 'smiling_face_with_sunglasses':\n      return String.fromCodePoint(0x1F60E)\n\n    case 'dizzy_face':\n      return String.fromCodePoint(0x1F635)\n\n    case 'neutral_face':\n      return String.fromCodePoint(0x1F610)\n\n    case 'cross_mark':\n      return String.fromCodePoint(0x274C)\n\n    default:\n      throw Error(`Emoji ${code} not implemented`)\n  }\n}\n","import React from 'react'\nimport isMine from '../core/isMine'\nimport Emoji from './Emoji'\n\nexport default function CellEmoji ({ cell }) {\n  switch (cell.state) {\n    case 'covered':\n      return ' '\n\n    case 'flagged':\n      return <Emoji code='triangular_flag' />\n\n    case 'question-mark':\n      return <Emoji code='question' />\n\n    case 'exploted':\n      return <Emoji code='boom' />\n\n    case 'uncovered':\n      return isMine(cell.value) ? <Emoji code='bomb' /> : (cell.value || ' ')\n\n    case 'wrong-flagged':\n      return <Emoji code='cross_mark' />\n\n    default:\n      throw Error(`Cell state '${cell.state}' not implemented`)\n  }\n}\n","import React from 'react'\nimport Emoji from './Emoji'\n\nexport default function GameStateEmoji ({ gameState }) {\n  switch (gameState) {\n    case 'won':\n      return <Emoji code='smiling_face_with_sunglasses' />\n\n    case false:\n      return <Emoji code='neutral_face' />\n\n    case 'lose':\n      return <Emoji code='dizzy_face' />\n\n    default:\n      throw Error(`Game state '${gameState}' not implemented`)\n  }\n}\n","import React, { useCallback, useEffect } from 'react'\nimport useBoard from '../hooks/useBoard'\nimport CellEmoji from './CellEmoji'\nimport GameStateEmoji from './GameStateEmoji'\n\nexport default function Board ({ boardDimensions, defaultBoard, saveBoard, deleteBoard, onGoBack, defaultSeconds = 0 }) {\n  const { board, uncover, restart, toogleFlag, seconds, minesCounter, gameEnded } = useBoard(boardDimensions, { defaultBoard, defaultSeconds })\n\n  useEffect(() => {\n    if (gameEnded) {\n      deleteBoard()\n    }\n  }, [gameEnded, deleteBoard])\n\n  const handleToogleFlag = useCallback((e, rowIndex, columnIndex) => {\n    e.preventDefault()\n    toogleFlag(rowIndex, columnIndex)\n  }, [toogleFlag])\n\n  const handleGoBack = useCallback(() => {\n    onGoBack()\n    if (!gameEnded) {\n      saveBoard(board, boardDimensions, seconds)\n    }\n  }, [board, boardDimensions, seconds, onGoBack, gameEnded])\n\n  return (\n    <>\n      <span className='menu-option' onClick={handleGoBack}> {'<'} Go Back & Save</span>\n      <table className='board'>\n        <tbody>\n          <tr>\n            <td className='header' colSpan={board[0].length}>\n              <div className='counter' style={{ float: 'left' }}>{minesCounter}</div>\n              <div className='counter' style={{ float: 'right' }}>{seconds > 999 ? 999 : seconds}</div>\n              <div className='restarter' onClick={restart}>\n                <GameStateEmoji gameState={gameEnded} />\n              </div>\n            </td>\n          </tr>\n          {board.map((row, rowIndex) => (\n            <tr key={rowIndex}>\n              {row.map((cell, columnIndex) => (\n                <td\n                  key={`${rowIndex},${columnIndex}`}\n                  className={`cell ${cell.state} cell-${cell.value}`}\n                  onClick={() => uncover(rowIndex, columnIndex)}\n                  onContextMenu={e => handleToogleFlag(e, rowIndex, columnIndex)}\n                >\n                  <CellEmoji cell={cell} />\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </>\n  )\n}\n","import React from 'react'\n\nexport default function Main ({ onContinue, onNewGame, canContinue }) {\n  return (\n    <>\n      <h4>Main Menu</h4>\n      <ul>\n        {canContinue && (\n          <li><span className='menu-option' onClick={onContinue}>Continue Game</span></li>\n        )}\n        <li><span className='menu-option' onClick={onNewGame}>New Game</span></li>\n      </ul>\n    </>\n  )\n}\n","import React from 'react'\n\nexport default function CustomDimensionsForm ({ boardDimensions, showForm, submit, maxAdjacentMines = 8 }) {\n  const { setBoardDimensions, ...dimensions } = boardDimensions\n\n  return (\n    <div className={showForm ? '' : 'invisible'}>\n      <label htmlFor='width'>\n        Width\n        <input\n          type='number'\n          className='dimension'\n          name='width'\n          value={dimensions.height}\n          onChange={e => setBoardDimensions(dimensions.width, e.target.value, dimensions.mines, maxAdjacentMines)}\n        />\n      </label>\n      <br />\n      <label htmlFor='height'>\n        Height\n        <input\n          type='number'\n          className='dimension'\n          name='height'\n          value={dimensions.width}\n          onChange={e => setBoardDimensions(e.target.value, dimensions.height, dimensions.mines, maxAdjacentMines)}\n        />\n      </label>\n      <br />\n      <label htmlFor='mines'>\n        Mines\n        <input\n          type='number'\n          className='dimension'\n          name='mines'\n          value={dimensions.mines}\n          onChange={e => setBoardDimensions(dimensions.width, dimensions.height, e.target.value, maxAdjacentMines)}\n        />\n      </label>\n      <button onClick={submit} className='py-4' style={{ display: 'block' }}>Submit</button>\n    </div>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport CustomDimensionsForm from './CustomDimensionsForm'\n\nexport default function NewGame ({ onBoardView, dimensions }) {\n  const [showForm, setShowForm] = useState(false)\n  const { setBoardDimensions } = dimensions\n\n  const setDimensions = useCallback((width, height, mines, maxAdjacentMines) => {\n    setBoardDimensions(width, height, mines, maxAdjacentMines)\n    onBoardView()\n  }, [setBoardDimensions, onBoardView])\n\n  return (\n    <>\n      <h4>New Game</h4>\n      <ul>\n        <li><span className='menu-option' onClick={() => setDimensions(8, 8, 10)}>Beginner</span></li>\n        <li><span className='menu-option' onClick={() => setDimensions(16, 16, 40)}>Intermediate</span></li>\n        <li><span className='menu-option' onClick={() => setDimensions(16, 30, 99, 8)}>Expert</span></li>\n        <li><span className='menu-option' onClick={() => setShowForm(show => !show)}>Custom</span></li>\n      </ul>\n      <CustomDimensionsForm\n        boardDimensions={dimensions}\n        showForm={showForm}\n        submit={onBoardView}\n      />\n    </>\n  )\n}\n","import axios from 'axios'\nimport qs from 'qs'\n\nexport default async function http ({\n  url,\n  method = 'GET',\n  params = {},\n  body = {},\n  headers = {}\n}) {\n  return httpBase({\n    url,\n    method,\n    params,\n    data: body,\n    headers\n  })\n}\n\nexport const httpBase = axios.create({\n  baseURL: '/api/',\n  headers: { Accept: 'application/vnd.api+json', 'Content-Type': 'application/vnd.api+json' },\n  paramsSerializer: params => qs.stringify(params, { arrayFormat: 'comma' }),\n  validateStatus: status => status >= 200 && status < 300\n})\n","import { Deserializer } from 'jsonapi-serializer'\nimport http from './http'\n\nexport async function create ({ url, body, ...options }) {\n  const response = await http({\n    url,\n    method: 'POST',\n    body,\n    ...options\n  })\n\n  return deserializeResponse(response)\n}\n\nexport async function update ({ url, body, ...options }) {\n  const response = await http({\n    url,\n    method: 'PATCH',\n    body,\n    ...options\n  })\n\n  return deserializeResponse(response)\n}\n\nexport async function fetch ({ url, params = {}, ...options }) {\n  const response = await http({\n    url,\n    params,\n    options\n  })\n\n  return deserializeResponse(response)\n}\n\nexport async function destroy ({ url, ...options }) {\n  return await http({\n    url,\n    method: 'DELETE',\n    options\n  })\n}\n\nasync function deserialize (data) {\n  const opt = {\n    keyForAttribute: 'camelCase'\n  }\n\n  return new Deserializer(opt).deserialize(data)\n}\n\nasync function deserializeResponse (response) {\n  if (response.data && !response.data.errors) {\n    response.data.data = await deserialize(response.data)\n  }\n  return response\n}\n","import { Serializer } from 'jsonapi-serializer'\nimport { create, destroy, fetch, update } from './api'\n\nexport async function createBoard ({ board, browserId, seconds, dimensions }) {\n  board = JSON.stringify(board)\n  dimensions = JSON.stringify(dimensions)\n  const body = serialize({ board, browser_id: browserId, seconds, dimensions })\n\n  const response = await create({\n    url: 'v1/boards',\n    body\n  })\n\n  if (response.data && response.data.data) {\n    response.data.data = parseBoard(response.data.data)\n  }\n\n  return response\n}\n\nexport async function updateBoard ({ id, board, seconds, dimensions, browserId = undefined }) {\n  board = JSON.stringify(board)\n  dimensions = JSON.stringify(dimensions)\n  const body = serialize({ id, board, dimensions, seconds, browser_id: browserId })\n\n  const response = await update({\n    url: `v1/boards/${id}`,\n    body\n  })\n\n  if (response.data && response.data.data) {\n    response.data.data = parseBoard(response.data.data)\n  }\n\n  return response\n}\n\nexport async function findBoard (id) {\n  const response = await fetch({\n    url: `v1/boards/${id}`\n  })\n\n  if (response.data && response.data.data) {\n    response.data.data = parseBoard(response.data.data)\n  }\n\n  return response\n}\n\nexport async function fetchBoardsBy (filter) {\n  const params = { filter }\n\n  const response = await fetch({\n    url: 'v1/boards',\n    params\n  })\n\n  if (response.data && response.data.data) {\n    response.data.data = response.data.data.map(board => parseBoard(board))\n  }\n\n  return response\n}\n\nexport async function destroyBoard (id) {\n  return destroy({\n    url: `v1/boards/${id}`\n  })\n}\n\nfunction serialize (data) {\n  const opt = {\n    keyForAttribute: 'snake_case',\n    attributes: ['board', 'browser_id', 'seconds', 'dimensions']\n  }\n\n  return new Serializer('boards', opt).serialize(data)\n}\n\nfunction parseBoard (board) {\n  board.board = JSON.parse(board.board)\n  board.dimensions = JSON.parse(board.dimensions)\n  return board\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { createBoard, destroyBoard, fetchBoardsBy, updateBoard } from '../core/api/boards'\n\nexport default function useStoredBoard (browserId) {\n  const [stored, setStored] = useState(null)\n\n  useEffect(() => {\n    fetchBoardsBy({ browser_id: browserId })\n      .then(response => setStored(response.data.data[0]))\n      .catch(e => console.error(e))\n  }, [])\n\n  const saveBoard = useCallback((board, dimensions, seconds) => {\n    let request\n    if (stored && stored.id) {\n      request = updateBoard({ id: stored.id, board, dimensions, seconds })\n    } else {\n      request = createBoard({ board, dimensions, seconds, browserId })\n    }\n\n    request.then(response => setStored(response.data.data))\n      .catch(e => console.error(e))\n  }, [stored, browserId])\n\n  const deleteBoard = useCallback(() => {\n    if (!stored || !stored.id) {\n      return\n    }\n\n    destroyBoard(stored.id)\n      .then(() => setStored(null))\n      .catch(e => console.error(e))\n  }, [stored])\n\n  return {\n    board: stored,\n    saveBoard,\n    deleteBoard\n  }\n}\n","import { useMemo, useState } from 'react'\n\nconst mainView = 'main'\nconst continueView = 'continue'\nconst newGameView = 'new-game'\nconst boardView = 'board'\n\nexport default function useView (board, dimensions) {\n  const [view, setView] = useState(mainView)\n\n  const defaultDimensions = useMemo(() => {\n    if (view !== 'continue') {\n      return dimensions\n    }\n\n    return {\n      ...board.dimensions,\n      setBoardDimensions: dimensions.setBoardDimensions\n    }\n  }, [view])\n\n  const defaultBoard = useMemo(() => view === 'continue' ? board.board : null, [view])\n\n  const defaultSeconds = useMemo(() => view === 'continue' ? board.seconds : 0, [view])\n\n  const setMainView = useMemo(() => () => setView(mainView), [])\n  const setContinueVew = useMemo(() => () => setView(continueView), [])\n  const setNewGameView = useMemo(() => () => setView(newGameView), [])\n  const setBoardView = useMemo(() => () => setView(boardView), [])\n\n  return {\n    view,\n    defaultDimensions,\n    defaultBoard,\n    defaultSeconds,\n    setMainView,\n    setContinueVew,\n    setNewGameView,\n    setBoardView,\n    mainView,\n    continueView,\n    newGameView,\n    boardView\n  }\n}\n","import React from 'react'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport Board from './components/Board'\nimport Main from './components/Main'\nimport NewGame from './components/NewGame'\nimport browserId from './core/broserId'\nimport useBoardDimensions from './hooks/useBoardDimensions'\nimport useStoredBoard from './hooks/useStoredBoard'\nimport useView from './hooks/useView'\n\nexport default function App () {\n  const boardDimensions = useBoardDimensions()\n  const { board, saveBoard, deleteBoard } = useStoredBoard(browserId())\n  const view = useView(board, boardDimensions)\n  const { setContinueVew, setNewGameView, setBoardView, setMainView } = view\n\n  return (\n    <>\n      <h1>Minesweeper</h1>\n      <h3><i>by: Enmy Perez</i></h3>\n      {view.view === view.mainView && (\n        <Main\n          onContinue={setContinueVew}\n          onNewGame={setNewGameView}\n          canContinue={board}\n        />\n      )}\n      {view.view === view.newGameView && (\n        <NewGame\n          onBoardView={setBoardView}\n          dimensions={boardDimensions}\n        />\n      )}\n      {[view.boardView, view.continueView].includes(view.view) && (\n        <>\n          <ErrorBoundary\n            fallbackRender={({ error, resetErrorBoundary }) => (\n              <>\n                <span className='menu-option' onClick={setMainView}> {'<'} Go Back</span>\n                <div style={{ marginTop: '4em', marginBottom: '4em' }}>\n                  <h3 style={{ color: 'red' }}>{error.message}</h3>\n                  <button onClick={resetErrorBoundary} className='py-4'>Try again</button>\n                </div>\n              </>\n            )}\n          >\n            <Board\n              boardDimensions={view.defaultDimensions}\n              defaultBoard={view.defaultBoard}\n              saveBoard={saveBoard}\n              deleteBoard={deleteBoard}\n              defaultSeconds={view.defaultSeconds}\n              onGoBack={setMainView}\n            />\n          </ErrorBoundary>\n        </>\n      )}\n    </>\n  )\n}\n","import { useCallback, useState } from 'react'\n\nexport default function useBoardDimensions ({\n  defaultWidth = 8,\n  defaultHeight = 8,\n  defaultMines = 10,\n  defaultMaxAdjacentMines = 6\n} = {}) {\n  const [width, setWidth] = useState(defaultWidth)\n  const [height, setHeight] = useState(defaultHeight)\n  const [mines, setMines] = useState(defaultMines)\n  const [maxAdjacentMines, setMaxAdjacentMines] = useState(defaultMaxAdjacentMines)\n\n  const setBoardDimensions = useCallback((width, height, mines, maxAdjacentMines = 6) => {\n    setWidth(width)\n    setHeight(height)\n    setMines(mines)\n    setMaxAdjacentMines(maxAdjacentMines)\n  }, [])\n\n  return {\n    width,\n    height,\n    mines,\n    maxAdjacentMines,\n    setBoardDimensions\n  }\n}\n","export default function browserId () {\n  return window.browserId\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nif (document.getElementById('root')) {\n  ReactDOM.render(<App />, document.getElementById('root'))\n}\n"],"sourceRoot":""}